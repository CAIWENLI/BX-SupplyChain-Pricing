USE PROCUREMENTDB;
GO 
CREATE VIEW Sourcing.OpenDemandRetailOutputView AS 
SELECT PP.ISBN
      ,PP.DEMAND_QUANTITY
	  ,PP.BB_PRICE_FIXED
	  ,'0.08' AS MIN_GM
	  ,CASE WHEN PP.DUE_DATE IS NULL THEN '' ELSE CONVERT(VARCHAR(10), PP.DUE_DATE, 101) END AS DUE_DATE_DEMAND
	  ,CASE WHEN PP.DUE_DATE IS NULL THEN '' ELSE CONVERT(VARCHAR(10), DATEADD(DAY, -42,PP.DUE_DATE), 101) END AS EXPIRED_DATE_DEMAND
	  ,CASE WHEN PP.GUIDE_NAME IS NULL THEN '' ELSE GUIDE_NAME END AS GUIDE_NAME
	  ,PP.WAREHOUSE
	  ,CONVERT(VARCHAR(10), PP.DEMAND_DATE, 101) AS DEMAND_DATE
	  ,CASE WHEN TT.MAX_DOC_DATE IS NOT NULL AND TT.MAX_DOC_DATE < PP.DEMAND_DATE THEN 0 
	        WHEN TT.QTY_FULFILLED IS NULL THEN 0 ELSE TT.QTY_FULFILLED END AS QTY_FULFILLED_PO
	  ,CASE WHEN TT.MAX_DOC_DATE IS NULL THEN '' ELSE TT.MAX_DOC_DATE END AS MAX_DOC_DATE
	  ,CASE WHEN LL.Listing_Price IS NULL THEN 0 ELSE LL.Listing_Price END AS LISTING_PRICE
	  ,CASE WHEN PUB.PUB IS NULL THEN '' ELSE PUB.PUB END AS PUBLISHER
	  ,CASE WHEN TT.MAX_DOC_DATE IS NOT NULL AND TT.MAX_DOC_DATE < PP.DEMAND_DATE THEN PP.DEMAND_QUANTITY
	        WHEN TT.QTY_FULFILLED IS NULL THEN PP.DEMAND_QUANTITY ELSE PP.DEMAND_QUANTITY - TT.QTY_FULFILLED END AS OPEN_QTY_TO_FULFILL
FROM 
(SELECT D.ISBN
       ,D.SUB_ISBN
       ,SUM(D.QUANTITY) AS DEMAND_QUANTITY
	   ,AVG(D.BB_PRICE) AS BB_PRICE_FIXED
	   ,UPPER(D.WAREHOUSE) AS WAREHOUSE
	   ,UPPER(D.GUIDE_NAME) AS GUIDE_NAME
	   ,D.DEMAND_DATE
	   ,D.DUE_DATE
FROM PROCUREMENTDB.Sourcing.OpenDemandRetail D
GROUP BY D.ISBN, D.SUB_ISBN, D.GUIDE_NAME, D.WAREHOUSE, D.DUE_DATE, D.DEMAND_DATE)PP
LEFT JOIN 
(SELECT PRV.ISBN_PO
       ,PRV.WHSE_CODE_PO
       ,SUM(PRV.QTY_PO)- SUM(PRV.RECEIVED_QTY) AS QTY_FULFILLED
	   ,MAX(PRV.MAX_CREATE_DATE) AS MAX_DOC_DATE
FROM PROCUREMENTDB.Sourcing.POReceivedMappingView PRV
GROUP BY PRV.ISBN_PO, PRV.WHSE_CODE_PO)TT 
ON CONCAT(PP.ISBN, PP.WAREHOUSE) = CONCAT(TT.ISBN_PO, TT.WHSE_CODE_PO)
LEFT JOIN 
(SELECT LP.Isbn AS Isbn_LP, LP.Price AS Listing_Price FROM BookxcenterProduction.isbn.listprice LP WHERE Currency = 'USD')LL ON PP.ISBN = LL.Isbn_LP
LEFT JOIN
(SELECT ISBN, MIN(UPPER(Publisher))AS PUB FROM PROCUREMENTDB.dbo.GoldenList GROUP BY ISBN)PUB ON PP.ISBN = PUB.ISBN;
GO

SELECT * FROM PROCUREMENTDB.Sourcing.OpenDemandRetailOutputView 
USE PROCUREMENTDB;
GO 
CREATE VIEW Sourcing.POReceivedMappingView AS 
SELECT LPO.ISBN_PO
      ,LPO.QTY AS QTY_PO
      ,LPO.OPEN_QTY AS OPEN_QTY_PO
	  ,LPO.UNIT_PRICE AS UNIT_PRICE
	  ,LPO.WHSE_CODE AS WHSE_CODE_PO
	  ,LPO.MAX_DUE_AT_BXC
	  ,LPO.MAX_CREATE_DATE
	  ,LPO.MIN_CREATE_DATE
	  ,LPO.BP_CODE
	  ,LPO.BP_NAME
	  ,CASE WHEN GRR.MAX_RECEIVED_DATE IS NULL THEN '' ELSE GRR.MAX_RECEIVED_DATE END AS MAX_RECEIVED_DATE
	  ,CASE WHEN GRR.MIN_RECEIVED_DATE IS NULL THEN '' ELSE GRR.MIN_RECEIVED_DATE END AS MIN_RECEIVED_DATE
	  ,CASE WHEN GRR.RECEIVED_QTY IS NULL THEN 0 ELSE GRR.RECEIVED_QTY END AS RECEIVED_QTY
	  ,CASE WHEN GRR.RECEIVED_USD IS NULL THEN 0 ELSE GRR.RECEIVED_USD END AS RECEIVED_USD
FROM
(SELECT T.Isbn AS ISBN_PO, 
       SUM(T.Quantity) AS QTY, 
       SUM(T.OpenQuantity) AS OPEN_QTY, 
       AVG(T.USDUnitPrice) AS UNIT_PRICE,
       T.Wherehouse AS WHSE_CODE, 
       MAX(CONVERT(VARCHAR(10), T.DueAtBXC, 101)) AS MAX_DUE_AT_BXC,
	   MAX(CONVERT(VARCHAR(10), T.DocDate, 101)) AS MAX_CREATE_DATE,
	   MIN(CONVERT(VARCHAR(10), T.DocDate, 101)) AS MIN_CREATE_DATE,
       UPPER(T.BPName) AS BP_NAME,
	   T.BPCode AS BP_CODE
FROM BookXCenterProduction.SAP.LinePurchaseOrderView T
WHERE T.Wherehouse IN ('AW', 'TR', 'FBM') 
AND T.DocumentStatus IN ('O')
GROUP BY T.Isbn, T.Wherehouse, T.BPName, T.BPCode, T.DocumentStatus)LPO
LEFT JOIN
(SELECT GR.ISBN
      ,UPPER(GR.BPName) AS BP_NAME
	  ,BPCode AS BP_CODE
	  ,SUM(GR.Quantity) AS RECEIVED_QTY
	  ,SUM(GR.TotalUSDReceived) AS RECEIVED_USD
	  ,GR.WarehouseCode AS WHSE_CODE_R
	  ,MIN(CONVERT(VARCHAR(10), GR.PostingDate, 101)) AS MIN_RECEIVED_DATE
	  ,MAX(CONVERT(VARCHAR(10), GR.PostingDate, 101)) AS MAX_RECEIVED_DATE
FROM BookXCenterProduction.SAP.GoodsReceiptReportView GR
WHERE GR.WarehouseCode IN ('AW','TR','FBM')
AND GR.DocStatus IN ('O')
GROUP BY GR.ISBN, GR.BPName, GR.WarehouseCode, GR.BPCode)GRR ON CONCAT(LPO.ISBN_PO, LPO.WHSE_CODE, LPO.BP_CODE) = CONCAT(GRR.ISBN, GRR.WHSE_CODE_R, GRR.BP_CODE)
WHERE MAX_RECEIVED_DATE IS NULL
OR MAX_RECEIVED_DATE >= DATEADD(DAY, 28, MAX_CREATE_DATE);
GO

SELECT PRV.ISBN_PO
      ,PRV.WHSE_CODE_PO
      ,SUM(PRV.QTY_PO)-SUM(PRV.RECEIVED_QTY) AS OPEN_QTY
FROM PROCUREMENTDB.Sourcing.POReceivedMappingView PRV
GROUP BY PRV.ISBN_PO, PRV.WHSE_CODE_PO;

SELECT *
FROM PROCUREMENTDB.Sourcing.POReceivedMappingView PRV

SELECT ISBN
      ,MIN(UPPER(Publisher)) AS MAX_PUB
FROM PROCUREMENTDB.dbo.GoldenList 
GROUP BY ISBN
HAVING MAX(UPPER(Publisher)) = MIN(UPPER(Publisher))
   AND COUNT(ISBN) > 1

SELECT * FROM PROCUREMENTDB.Sourcing.OpenDemandRetailOutputView

SELECT ISBN, UPPER(Publisher) AS PUB FROM PROCUREMENTDB.dbo.GoldenList
WHERE ISBN IN ('9781516544776', '9781319191740')

SELECT * FROM PROCUREMENTDB.Sourcing.OpenDemandOutputView;
